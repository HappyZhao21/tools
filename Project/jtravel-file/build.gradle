buildscript {
    repositories {
        maven { url "https://maven.aliyun.com/repository/central" }
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://maven.aliyun.com/repository/google" }
        maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'idea'
    id 'maven-publish'
}
version '1.0-SNAPSHOT'
group 'com.jtravel.api'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

publishing {
    publications {
        binaryJar(MavenPublication) {
            from components.java
            artifact sourceJar
        }
    }
}

repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/repository/public/' }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    mavenCentral()
}


ext {
    set('springBootAdminVersion', "2.2.1")
    set('springCloudVersion', "Hoxton.SR3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-zuul'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    compile group: 'com.alibaba.cloud', name: 'spring-cloud-starter-alibaba-nacos-config', version: '2.2.1.RELEASE'
    compile group: 'com.alibaba.cloud', name: 'spring-cloud-starter-alibaba-nacos-discovery', version: '2.2.1.RELEASE'

    //让你像写Scala一样写Java
    compile group: 'io.vavr', name: 'vavr', version: '0.10.2'
    compile group: 'io.vavr', name: 'vavr-jackson', version: '0.10.2'

    implementation 'com.jtravel:jtravel-common:1.0.0-SNAPSHOT'

    compile group: 'com.github.xiaoymin', name: 'knife4j-spring-boot-starter', version: '2.0.2'

    compile group: 'org.apache.poi', name: 'poi', version: '3.16'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.16'
    compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: '3.17'
    compile group: 'org.apache.xmlbeans', name: 'xmlbeans', version: '3.1.0'
    compile group: 'dom4j', name: 'dom4j', version: '1.6.1'
    compile group: 'com.aliyun.oss', name: 'aliyun-sdk-oss', version: '3.1.0'


    implementation 'junit:junit:4.12'
}


dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
test {
    useJUnitPlatform()
    include '**/Test*.class'
    exclude '**/TestDataFetchers.class'
}