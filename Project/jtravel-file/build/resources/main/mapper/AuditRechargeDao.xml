<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jtravel.api.file.domain.upload.mapper.AuditRechargeDao">
  <resultMap id="BaseResultMap" type="com.jtravel.api.file.domain.upload.entity.AuditRecharge">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="recharge_amount" jdbcType="DECIMAL" property="rechargeAmount" />
    <result column="recharge_type" jdbcType="TINYINT" property="rechargeType" />
    <result column="business_id" jdbcType="TINYINT" property="businessId" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="audit_user_id" jdbcType="INTEGER" property="auditUserId" />
    <result column="audit_remarks" jdbcType="INTEGER" property="auditRemarks" />
    <result column="audit_proof" jdbcType="VARCHAR" property="auditProof" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="apply_user_id" jdbcType="INTEGER" property="applyUserId" />
    <result column="apply_proof" jdbcType="VARCHAR" property="applyProof" />
    <result column="apply_remarks" jdbcType="VARCHAR" property="applyRemarks" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, account_id, company_id, recharge_amount, recharge_type, business_id, `state`, 
    audit_time, audit_user_id, audit_remarks, audit_proof, apply_time, apply_user_id, 
    apply_proof, apply_remarks, update_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from audit_recharge
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from audit_recharge
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.jtravel.api.file.domain.upload.entity.AuditRecharge" useGeneratedKeys="true">
    insert into audit_recharge (account_id, company_id, recharge_amount, 
      recharge_type, business_id, `state`, 
      audit_time, audit_user_id, audit_remarks, 
      audit_proof, apply_time, apply_user_id, 
      apply_proof, apply_remarks, update_time, 
      create_time)
    values (#{accountId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{rechargeAmount,jdbcType=DECIMAL}, 
      #{rechargeType,jdbcType=TINYINT}, #{businessId,jdbcType=TINYINT}, #{state,jdbcType=TINYINT}, 
      #{auditTime,jdbcType=TIMESTAMP}, #{auditUserId,jdbcType=INTEGER}, #{auditRemarks,jdbcType=INTEGER}, 
      #{auditProof,jdbcType=VARCHAR}, #{applyTime,jdbcType=TIMESTAMP}, #{applyUserId,jdbcType=INTEGER}, 
      #{applyProof,jdbcType=VARCHAR}, #{applyRemarks,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.jtravel.api.file.domain.upload.entity.AuditRecharge" useGeneratedKeys="true">
    insert into audit_recharge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="rechargeAmount != null">
        recharge_amount,
      </if>
      <if test="rechargeType != null">
        recharge_type,
      </if>
      <if test="businessId != null">
        business_id,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="auditUserId != null">
        audit_user_id,
      </if>
      <if test="auditRemarks != null">
        audit_remarks,
      </if>
      <if test="auditProof != null">
        audit_proof,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="applyUserId != null">
        apply_user_id,
      </if>
      <if test="applyProof != null">
        apply_proof,
      </if>
      <if test="applyRemarks != null">
        apply_remarks,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="rechargeAmount != null">
        #{rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="rechargeType != null">
        #{rechargeType,jdbcType=TINYINT},
      </if>
      <if test="businessId != null">
        #{businessId,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditUserId != null">
        #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditRemarks != null">
        #{auditRemarks,jdbcType=INTEGER},
      </if>
      <if test="auditProof != null">
        #{auditProof,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applyUserId != null">
        #{applyUserId,jdbcType=INTEGER},
      </if>
      <if test="applyProof != null">
        #{applyProof,jdbcType=VARCHAR},
      </if>
      <if test="applyRemarks != null">
        #{applyRemarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jtravel.api.file.domain.upload.entity.AuditRecharge">
    update audit_recharge
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="rechargeAmount != null">
        recharge_amount = #{rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="rechargeType != null">
        recharge_type = #{rechargeType,jdbcType=TINYINT},
      </if>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditUserId != null">
        audit_user_id = #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditRemarks != null">
        audit_remarks = #{auditRemarks,jdbcType=INTEGER},
      </if>
      <if test="auditProof != null">
        audit_proof = #{auditProof,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applyUserId != null">
        apply_user_id = #{applyUserId,jdbcType=INTEGER},
      </if>
      <if test="applyProof != null">
        apply_proof = #{applyProof,jdbcType=VARCHAR},
      </if>
      <if test="applyRemarks != null">
        apply_remarks = #{applyRemarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jtravel.api.file.domain.upload.entity.AuditRecharge">
    update audit_recharge
    set account_id = #{accountId,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      recharge_amount = #{rechargeAmount,jdbcType=DECIMAL},
      recharge_type = #{rechargeType,jdbcType=TINYINT},
      business_id = #{businessId,jdbcType=TINYINT},
      `state` = #{state,jdbcType=TINYINT},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      audit_user_id = #{auditUserId,jdbcType=INTEGER},
      audit_remarks = #{auditRemarks,jdbcType=INTEGER},
      audit_proof = #{auditProof,jdbcType=VARCHAR},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      apply_user_id = #{applyUserId,jdbcType=INTEGER},
      apply_proof = #{applyProof,jdbcType=VARCHAR},
      apply_remarks = #{applyRemarks,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>