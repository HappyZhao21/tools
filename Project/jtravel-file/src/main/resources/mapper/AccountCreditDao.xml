<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jtravel.api.file.domain.upload.mapper.AccountCreditDao">
  <resultMap id="BaseResultMap" type="com.jtravel.api.file.domain.upload.entity.AccountCredit">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="account_no" jdbcType="VARCHAR" property="accountNo" />
    <result column="role_type" jdbcType="TINYINT" property="roleType" />
    <result column="credit_balance" jdbcType="DECIMAL" property="creditBalance" />
    <result column="credit_quota" jdbcType="DECIMAL" property="creditQuota" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="business_id" jdbcType="TINYINT" property="businessId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="created" jdbcType="INTEGER" property="created" />
    <result column="state" jdbcType="TINYINT" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    id, company_id, account_no, role_type, credit_balance, credit_quota, balance, business_id, 
    create_time, update_time, created, `state`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_credit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account_credit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.jtravel.api.file.domain.upload.entity.AccountCredit" useGeneratedKeys="true">
    insert into account_credit (company_id, account_no, role_type, 
      credit_balance, credit_quota, balance, 
      business_id, create_time, update_time, 
      created, `state`)
    values (#{companyId,jdbcType=INTEGER}, #{accountNo,jdbcType=VARCHAR}, #{roleType,jdbcType=TINYINT}, 
      #{creditBalance,jdbcType=DECIMAL}, #{creditQuota,jdbcType=DECIMAL}, #{balance,jdbcType=DECIMAL}, 
      #{businessId,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{created,jdbcType=INTEGER}, #{state,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.jtravel.api.file.domain.upload.entity.AccountCredit" useGeneratedKeys="true">
    insert into account_credit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="accountNo != null">
        account_no,
      </if>
      <if test="roleType != null">
        role_type,
      </if>
      <if test="creditBalance != null">
        credit_balance,
      </if>
      <if test="creditQuota != null">
        credit_quota,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="businessId != null">
        business_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="state != null">
        `state`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="accountNo != null">
        #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null">
        #{roleType,jdbcType=TINYINT},
      </if>
      <if test="creditBalance != null">
        #{creditBalance,jdbcType=DECIMAL},
      </if>
      <if test="creditQuota != null">
        #{creditQuota,jdbcType=DECIMAL},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="businessId != null">
        #{businessId,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null">
        #{created,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jtravel.api.file.domain.upload.entity.AccountCredit">
    update account_credit
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="accountNo != null">
        account_no = #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null">
        role_type = #{roleType,jdbcType=TINYINT},
      </if>
      <if test="creditBalance != null">
        credit_balance = #{creditBalance,jdbcType=DECIMAL},
      </if>
      <if test="creditQuota != null">
        credit_quota = #{creditQuota,jdbcType=DECIMAL},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jtravel.api.file.domain.upload.entity.AccountCredit">
    update account_credit
    set company_id = #{companyId,jdbcType=INTEGER},
      account_no = #{accountNo,jdbcType=VARCHAR},
      role_type = #{roleType,jdbcType=TINYINT},
      credit_balance = #{creditBalance,jdbcType=DECIMAL},
      credit_quota = #{creditQuota,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      business_id = #{businessId,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      created = #{created,jdbcType=INTEGER},
      `state` = #{state,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>